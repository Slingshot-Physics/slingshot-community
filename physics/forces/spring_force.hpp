#ifndef SPRING_FORCE_HEADER
#define SPRING_FORCE_HEADER

#include "ecs_types.hpp"
#include "slingshot_types.hpp"

namespace oy
{

namespace forces
{

namespace spring
{

   // Calculates the force generated by a spring. If bodyIdA and bodyIdB are
   // both non-negative, then the returned force represents the force acting on
   // body B from body A. Otherwise, the force represents the force acting on
   // the body with the non-negative ID from the world.
   void evaluateForce(
      const trecs::uid_t parent_id,
      const trecs::uid_t child_id,
      const oy::types::forceSpring_t & force,
      const oy::types::rigidBody_t & parent_body,
      const oy::types::rigidBody_t & child_body,
      oy::types::generalizedForce_t & parent_forque,
      oy::types::generalizedForce_t & child_forque
   );

   void evaluateForce(
      const trecs::uid_t parent_id,
      const trecs::uid_t child_id,
      const oy::types::forceSpring_t & force,
      const oy::types::rk4Midpoint_t & parent_body,
      const oy::types::rk4Midpoint_t & child_body,
      oy::types::generalizedForce_t & parent_forque,
      oy::types::generalizedForce_t & child_forque
   );

}

}

}

#endif
